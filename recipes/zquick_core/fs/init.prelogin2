#!/bin/bash

# read all configured consoles
read -r active < /sys/class/tty/console/active

# read active consoles into array
read -r -a consoles <<< "$active"

for i in "${!consoles[@]}"; do
    c="${consoles[i]}"
    # remove the current console from list
    tmp=("${consoles[@]}")
    unset 'consoles[i]'
    bash -i -l 2>&1 | tee /dev/tty1
done


udev_init() {
    qinitlog "Mounting filesystems" 
    mount -t proc proc /proc -o nosuid,noexec,nodev
    mount -t sysfs sys /sys -o nosuid,noexec,nodev
    mount -t devtmpfs dev /dev -o mode=0755,nosuid
    mount -t tmpfs run /run -o nosuid,nodev,mode=0755

    # create pts if not available
    if [ ! -d /dev/pts ]; then
        mkdir -p /dev/pts
        mount -t devpts devpts /dev/pts
    fi

    if [ -e /sys/firmware/efi ]; then
        mount -t efivarfs efivarfs /sys/firmware/efi/efivars -o nosuid,nodev,noexec
    fi

    qinitlog "Creating stdio devices"
    # Setup /dev symlinks
    if [ -e /proc/kcore ]; then
        ln -sfT /proc/kcore /dev/core
    fi
    ln -sfT /proc/self/fd /dev/fd
    ln -sfT /proc/self/fd/0 /dev/stdin
    ln -sfT /proc/self/fd/1 /dev/stdout
    ln -sfT /proc/self/fd/2 /dev/stderr

    qinitlog "Starting loggers"
    mkdir -p /var/log
    touch /var/log/messages
    syslogd -S -t
    klogd -c 4

    qinitlog "Starting udev"
    udevd --daemon --resolve-names=never
    udevadm trigger --action=add --type=subsystems
    udevadm trigger --action=add --type=devices
    udevadm settle
}

start_getty() {
    if [[ -e "$1" ]]; then
        while true; do
            ( exec setsid getty -n -l  0 "$1" > /dev/kmsg 2>&1 )
        done 
    fi
}

. /zquick/libexec/utils.sh
# shellcheck disable=SC1091
. /etc/zquickinit.conf

trap '' EXIT INT TERM
#tput clear

read -r active < /sys/class/tty/console/active
read -r -a consoles <<< "$active"
# last item in list is the one connected to /dev/console
# and is the "main" console
console=${consoles[-1]}
# remove last
unset 'consoles[-1]'


if [[ $t == '/dev/tty1' ]]; then
    bash -i -l 2>&1 | tee /dev/ttyS0
fi
if [[ $t == '/dev/ttyS0' ]]; then
    bash -i -l 2>&1 | tee /dev/tty1
fi

udev_init
/zquick/libexec/prelogin-init-zbm.sh
/zquick/libexec/run_hooks.sh init.d
read -rs -t3 -n1 -p "Press any key or wait to continue ..."
/zquick/libexec/prelogin-zbm.sh || touch /var/run/prelogin-failed

start_getty /dev/ttyS0 /zquick/init &
start_getty /dev/hvc0 /zquick/init &

# the console
start_getty /dev/tty1 /zquick/init

#this magic will redirect everything to another term
#bash -i -l 2>&1 | tee /dev/tty1