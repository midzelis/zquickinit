#!/bin/bash

build() {
	zquick_add_fs

	add_binary login
	add_binary clear
	add_binary reset
	add_binary strace
	if which yq-go >/dev/null; then
		add_binary yq-go /bin/yq
	else
		add_binary yq
	fi
	add_binary gum
	add_binary htop

	# user info
	add_file /etc/passwd
	add_file /etc/group
	add_file /etc/shells
	[[ -r /etc/default/locale ]] && add_file /etc/default/locale

	cat >> "${BUILDROOT}/root/.bashrc" <<-'EOF'
		PATH="$PATH":/zquick
		export TERM='xterm-256color'
		alias ls='ls --color=auto' 
		alias grep='grep --colour=auto'
		/zquick/libexec/run_hooks.sh bash.d
		EOF

	printf '%s\n' >"$BUILDROOT/etc/nsswitch.conf" \
         'passwd: files' \
         'group: files' \
         'shadow: files'

    echo "root::0:0:root:/root:/bin/bash" >"$BUILDROOT/etc/passwd"
	echo "sshd:*:91:91::/run/sshd:/bin/false" >>"$BUILDROOT/etc/passwd"
	echo "nobody:*:99:99::/dev/null:/bin/false" >>"$BUILDROOT/etc/passwd"
	echo "root:root" | chpasswd -c SHA256 -R "$BUILDROOT"
	cat "$BUILDROOT/etc/shadow"
	cat "$BUILDROOT/etc/passwd"
    getent group root audio disk input kmem kvm lp optical render sgx storage tty uucp video | awk -F: ' { print $1 ":x:" $3 ":" }' >"$BUILDROOT/etc/group"

	libpaths=(/lib /usr/lib /lib64 /usr/lib64)
	for conf in /etc/ld.so.conf.d/*; do
		while read -r line; do
			[[ "$line" =~ ^#.*$ ]] && continue
			libpaths+=("$line")
		done < "$conf"
	done
	libs=(security/pam_warn.so security/pam_deny.so security/pam_unix.so security/pam_env.so security/pam_nologin.so)
	for llib in "${libs[@]}"; do
		for ldir in "${libpaths[@]}"; do
			lib=${ldir}/${llib}
			[[ -e ${lib} ]] && echo  "${lib}" && add_binary "${lib}" && break
		done
	done

	# create wrapper for zfsbootmenu entry point
	rm "${BUILDROOT}/hooks/zfsbootmenu"
 	touch "${BUILDROOT}/libexec/zfsbootmenu"

	# UDEV stuff
	if [[ ! -x /usr/lib/systemd/systemd ]]; then
		add_file "/etc/udev/udev.conf"
		add_binary /usr/bin/udevd
		add_binary /usr/bin/udevadm

		map add_udev_rule \
			'50-udev-default.rules' \
			'60-persistent-storage.rules' \
			'64-btrfs.rules' \
			'80-drivers.rules'
    
    	map add_file \
			'/usr/lib/udev/ata_id' \
			'/usr/lib/udev/scsi_id'


		add_runscript
	fi
	# end UDEV

}
# https://pkginfo.devuan.org/cgi-bin/package-query.html?c=package&q=eudev=3.2.14-1
